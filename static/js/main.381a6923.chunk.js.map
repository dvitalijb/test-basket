{"version":3,"sources":["redux/reducer.js","redux/actions.js","components/ItemBasket.js","components/NewItemHandler.js","components/NewItem.js","components/BasketHandler.js","components/Basket.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","id","title","quantity","price","marked","editItem","editValue","newItemTitle","newItemQuantity","newItemPrice","isAvailableButtonSubmit","additionalInputsClasses","inputTitle","inputQuantity","inputPrice","isNewItemField","actionHandlers","state","action","item","map","filter","sort","a","b","column","localeCompare","find","value","boolean","obj","ItemBasket","props","chooseItem","addEditItem","changeEditValue","updateQuantity","checkQuantity","Number","isInteger","type","checked","onChange","onClick","className","onKeyPress","e","key","checkEventPress","target","inputHandler","NewItemHandler","connect","dispatch","addItem","setInputTitle","setInputQuantity","setInputPrice","setButtonSubmit","setInputsClasses","showNewItemField","isValidFieldQuantity","isValidPrice","disabled","Date","now","inputClassName","handlerQuantity","handlerPrice","BasketHandler","classQuantityInput","removeItems","sortBy","itemsBasket","sortHandle","dataset","sum","reduce","acc","currentValue","data-sort","store","createStore","handler","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.381a6923.chunk.js","sourcesContent":["import {\n  ADD_ITEM,\n  REMOVE_ITEMS,\n  CHOOSE_ITEM,\n  SORT_BY,\n  INDEX_EDIT_ITEM,\n  CHANGE_EDIT_VALUE,\n  UPDATE_QUANTITY,\n  SET_INPUT_TITLE,\n  SET_INPUT_QUANTITY,\n  SET_INPUT_PRICE,\n  SET_BUTTON_SUBMIT,\n  SET_INPUTS_CLASSES,\n  SHOW_FIELD_NEW_ITEM,\n} from \"./actions\";\n\nconst initialState = {\n  items: [\n    { id: 1, title: \"Молоко\", quantity: 1, price: 20, marked: false },\n    { id: 2, title: \"Вода мінеральна\", quantity: 2, price: 30, marked: false },\n    { id: 3, title: \"Пиво\", quantity: 3, price: 45, marked: false },\n    { id: 4, title: \"Печиво \", quantity: 4, price: 10, marked: false },\n    { id: 5, title: \"Сир\", quantity: 5, price: 25.5, marked: false },\n    { id: 6, title: \"Батон\", quantity: 6, price: 15.4, marked: false },\n  ],\n  editItem: null,\n  editValue: \"\",\n  newItemTitle: \"\",\n  newItemQuantity: \"\",\n  newItemPrice: \"\",\n  isAvailableButtonSubmit: false,\n  additionalInputsClasses: {\n    inputTitle: \"\",\n    inputQuantity: \"\",\n    inputPrice: \"\",\n  },\n  isNewItemField: false,\n};\n\nconst actionHandlers = {\n  [ADD_ITEM]: (state, action) => ({\n    ...state,\n    items: [...state.items, action.item],\n  }),\n  [CHOOSE_ITEM]: (state, action) => ({\n    ...state,\n    items: state.items.map((item) => {\n      if (item.id === action.id) {\n        item.marked = !item.marked;\n      }\n      return item;\n    }),\n  }),\n  [REMOVE_ITEMS]: (state) => ({\n    ...state,\n    items: state.items.filter((item) => !item.marked),\n  }),\n  [SORT_BY]: (state, action) => ({\n    ...state,\n    items: [\n      ...[\n        ...state.items.sort((a, b) =>\n          (\"\" + a[action.column]).localeCompare(b[action.column])\n        ),\n      ],\n    ],\n  }),\n  [INDEX_EDIT_ITEM]: (state, action) => ({\n    ...state,\n    editItem: action.id,\n    editValue: state.items.find((item) => item.id === action.id).quantity,\n  }),\n  [CHANGE_EDIT_VALUE]: (state, action) => ({\n    ...state,\n    editValue: action.value,\n  }),\n  [UPDATE_QUANTITY]: (state) => ({\n    ...state,\n    editItem: null,\n    editValue: \"\",\n    items: state.items.map((item) => {\n      return item.id === state.editItem\n        ? { ...item, quantity: +state.editValue }\n        : item;\n    }),\n  }),\n  [SET_INPUT_TITLE]: (state, action) => ({\n    ...state,\n    newItemTitle: action.value,\n  }),\n  [SET_INPUT_QUANTITY]: (state, action) => ({\n    ...state,\n    newItemQuantity: action.value,\n  }),\n  [SET_INPUT_PRICE]: (state, action) => ({\n    ...state,\n    newItemPrice: action.value,\n  }),\n  [SET_BUTTON_SUBMIT]: (state, action) => ({\n    ...state,\n    isAvailableButtonSubmit: action.boolean,\n  }),\n  [SET_INPUTS_CLASSES]: (state, action) => ({\n    ...state,\n    additionalInputsClasses: action.obj,\n  }),\n  [SHOW_FIELD_NEW_ITEM]: (state) => ({\n    ...state,\n    isNewItemField: !state.isNewItemField,\n  }),\n};\n\nexport const reducer = (state = initialState, action) => {\n  const handler = actionHandlers[action.type];\n  return handler ? handler(state, action) : state;\n};\n","export const ADD_ITEM = \"ADD_ITEM\";\nexport const REMOVE_ITEMS = \"REMOVE_ITEMS\";\nexport const CHOOSE_ITEM = \"CHOOSE_ITEM\";\nexport const SORT_BY = \"SORT_BY\";\nexport const INDEX_EDIT_ITEM = \"INDEX_EDIT_ITEM\";\nexport const CHANGE_EDIT_VALUE = \"CHANGE_EDIT_VALUE\";\nexport const UPDATE_QUANTITY = \"UPDATE_QUANTITY\";\nexport const SET_INPUT_TITLE = \"SET_INPUT_TITLE\";\nexport const SET_INPUT_QUANTITY = \"SET_INPUT_QUANTITY\";\nexport const SET_INPUT_PRICE = \"SET_INPUT_PRICE\";\nexport const SET_BUTTON_SUBMIT = \"SET_BUTTON_SUBMIT\";\nexport const SET_INPUTS_CLASSES = \"SET_INPUTS_CLASSES\";\nexport const SHOW_FIELD_NEW_ITEM = \"SHOW_FIELD_NEW_ITEM\";\n\nexport const addItem = (item) => ({\n  type: ADD_ITEM,\n  item,\n});\nexport const removeItems = () => ({\n  type: REMOVE_ITEMS,\n});\nexport const chooseItem = (id) => ({\n  type: CHOOSE_ITEM,\n  id,\n});\nexport const sortBy = (column) => ({\n  type: SORT_BY,\n  column,\n});\nexport const addEditItem = (id) => ({\n  type: INDEX_EDIT_ITEM,\n  id,\n});\nexport const changeEditValue = (value) => ({\n  type: CHANGE_EDIT_VALUE,\n  value,\n});\nexport const updateQuantity = (value) => ({\n  type: UPDATE_QUANTITY,\n  value,\n});\n\nexport const setInputTitle = (value) => ({\n  type: SET_INPUT_TITLE,\n  value,\n});\n\nexport const setInputQuantity = (value) => ({\n  type: SET_INPUT_QUANTITY,\n  value,\n});\n\nexport const setInputPrice = (value) => ({\n  type: SET_INPUT_PRICE,\n  value,\n});\n\nexport const setButtonSubmit = (boolean) => ({\n  type: SET_BUTTON_SUBMIT,\n  boolean,\n});\n\nexport const setInputsClasses = (obj) => ({\n  type: SET_INPUTS_CLASSES,\n  obj,\n});\n\nexport const showNewItemField = () => ({\n  type: SHOW_FIELD_NEW_ITEM,\n});\n","import React from \"react\";\n\nexport const ItemBasket = (props) => {\n  const {\n    chooseItem,\n    item,\n    addEditItem,\n    editItem,\n    changeEditValue,\n    editValue,\n    updateQuantity,\n  } = props;\n  const { id, title, quantity, price, marked } = item;\n  const checkQuantity = (value) => Number.isInteger(+value) && value > 0;\n  const itemHandler = () => {\n    chooseItem(id);\n  };\n  const inputHandler = (e) => {\n    changeEditValue(e.target.value);\n  };\n  const checkEventPress = (e) => {\n    if (e.key === \"Enter\" && checkQuantity(editValue)) {\n      updateQuantity();\n    }\n  };\n\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"checkbox\"\n          checked={marked}\n          onChange={() => itemHandler()}\n        />\n      </td>\n      <td>{title}</td>\n      <td>\n        {editItem !== id ? (\n          <p\n            onClick={() => addEditItem(id)}\n            className=\"quantity cursor-pointer\"\n          >\n            {quantity}\n          </p>\n        ) : (\n          <input\n            type=\"text\"\n            className={checkQuantity(editValue) ? \"\" : \"border-danger\"}\n            value={editValue}\n            onKeyPress={(e) => checkEventPress(e)}\n            onChange={(e) => inputHandler(e)}\n          />\n        )}\n      </td>\n      <td>{price}</td>\n    </tr>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { NewItem } from \"./NewItem\";\nimport {\n  addItem,\n  setInputTitle,\n  setInputQuantity,\n  setInputPrice,\n  setButtonSubmit,\n  setInputsClasses,\n  showNewItemField,\n} from \"../redux/actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    newItemTitle: state.newItemTitle,\n    newItemQuantity: state.newItemQuantity,\n    newItemPrice: state.newItemPrice,\n    isAvailableButtonSubmit: state.isAvailableButtonSubmit,\n    additionalInputsClasses: state.additionalInputsClasses,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addItem: (item) => dispatch(addItem(item)),\n    setInputTitle: (value) => dispatch(setInputTitle(value)),\n    setInputQuantity: (value) => dispatch(setInputQuantity(value)),\n    setInputPrice: (value) => dispatch(setInputPrice(value)),\n    setButtonSubmit: (boolean) => dispatch(setButtonSubmit(boolean)),\n    setInputsClasses: (obj) => dispatch(setInputsClasses(obj)),\n    showNewItemField: () => dispatch(showNewItemField()),\n  };\n}\n\nexport const NewItemHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NewItem);\n","import React from \"react\";\n\nexport const NewItem = ({\n  addItem,\n  setInputTitle,\n  setInputQuantity,\n  setInputPrice,\n  setButtonSubmit,\n  setInputsClasses,\n  newItemTitle,\n  newItemQuantity,\n  newItemPrice,\n  isAvailableButtonSubmit,\n  additionalInputsClasses,\n  showNewItemField,\n}) => {\n  const isValidFieldQuantity = (value) => Number.isInteger(+value) && value > 0;\n  const isValidPrice = (value) => value > 0;\n\n  const handlerQuantity = (value) => {\n    setInputQuantity(value);\n    let inputClassName;\n    isValidFieldQuantity(value)\n      ? (inputClassName = \"\")\n      : (inputClassName = \"border-danger\");\n    setInputsClasses({\n      ...additionalInputsClasses,\n      \"inputQuantity\": inputClassName,\n    });\n  };\n\n  const handlerPrice = (value) => {\n    setInputPrice(value);\n    let inputClassName;\n    isValidPrice(value)\n      ? (inputClassName = \"\")\n      : (inputClassName = \"border-danger\");\n    setInputsClasses({\n      ...additionalInputsClasses,\n      \"inputPrice\": inputClassName,\n    });\n  };\n\n  const validationForm = () => {\n    if (isValidFieldQuantity(newItemQuantity) && isValidPrice(newItemPrice)) {\n      addItem({\n        id: Date.now(),\n        title: newItemTitle,\n        quantity: newItemQuantity,\n        price: newItemPrice,\n        marked: false,\n      });\n      setInputTitle(\"\");\n      setInputQuantity(\"\");\n      setInputPrice(\"\");\n      setButtonSubmit(true);\n      setInputsClasses({\n        inputTitle: \"\",\n        inputQuantity: \"\",\n        inputPrice: \"\",\n      });\n      showNewItemField();\n    }\n  };\n\n  const isField = () => {\n    if (newItemTitle && newItemQuantity && newItemPrice) {\n      setButtonSubmit(true);\n    } else {\n      setButtonSubmit(false);\n    }\n  };\n\n  isField();\n\n  return (\n    <tr>\n      <td>\n        <button\n          type=\"button\"\n          className=\"btn btn-dark\"\n          disabled={!isAvailableButtonSubmit}\n          onClick={() => validationForm()}\n        >\n          Додати\n        </button>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          className={`shadow-none ${additionalInputsClasses.inputTitle}`}\n          value={newItemTitle}\n          onChange={(e) => setInputTitle(e.target.value)}\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          className={` shadow-none ${additionalInputsClasses.inputQuantity}`}\n          value={newItemQuantity}\n          onChange={(e) => handlerQuantity(e.target.value)}\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          className={` shadow-none ${additionalInputsClasses.inputPrice}`}\n          value={newItemPrice}\n          onChange={(e) => handlerPrice(e.target.value)}\n        />\n      </td>\n    </tr>\n  );\n};\n","import { connect } from \"react-redux\";\nimport { Basket } from \"./Basket\";\nimport {\n  chooseItem,\n  removeItems,\n  sortBy,\n  addEditItem,\n  changeEditValue,\n  updateQuantity,\n  showNewItemField,\n} from \"../redux/actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    items: state.items,\n    editItem: state.editItem,\n    editValue: state.editValue,\n    classQuantityInput: state.classQuantityInput,\n    isNewItemField: state.isNewItemField,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    chooseItem: (id) => dispatch(chooseItem(id)),\n    removeItems: () => dispatch(removeItems()),\n    sortBy: (column) => dispatch(sortBy(column)),\n    addEditItem: (id) => dispatch(addEditItem(id)),\n    changeEditValue: (value) => dispatch(changeEditValue(value)),\n    updateQuantity: () => dispatch(updateQuantity()),\n    showNewItemField: () => dispatch(showNewItemField()),\n  };\n}\n\nexport const BasketHandler = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Basket);\n","import React from \"react\";\nimport { ItemBasket } from \"./ItemBasket\";\nimport { NewItemHandler } from \"./NewItemHandler\";\n\nexport function Basket({\n  items,\n  chooseItem,\n  removeItems,\n  sortBy,\n  addEditItem,\n  editItem,\n  changeEditValue,\n  editValue,\n  updateQuantity,\n  isNewItemField,\n  showNewItemField,\n}) {\n  const itemsBasket = items.map((item) => (\n    <ItemBasket\n      key={item.id}\n      item={item}\n      chooseItem={chooseItem}\n      addEditItem={addEditItem}\n      editItem={editItem}\n      changeEditValue={changeEditValue}\n      editValue={editValue}\n      updateQuantity={updateQuantity}\n    />\n  ));\n  const sortHandle = (e) => {\n    sortBy(e.target.dataset.sort);\n  };\n  const sum = items.reduce(\n    (acc, currentValue) => acc + currentValue.quantity * currentValue.price,\n    0\n  );\n\n  return (\n    <div className=\"container\">\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                disabled={!items.find((item) => item.marked === true)}\n                onClick={removeItems}\n              >\n                Видалити\n              </button>\n            </th>\n            <th data-sort=\"title\" onClick={(e) => sortHandle(e)}>\n              Назва товару\n            </th>\n            <th data-sort=\"quantity\" onClick={(e) => sortHandle(e)}>\n              Кількість\n            </th>\n            <th data-sort=\"price\" onClick={(e) => sortHandle(e)}>\n              Ціна за одиницю товару\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {itemsBasket}\n          {isNewItemField && <NewItemHandler />}\n          <tr>\n            <th></th>\n            <td></td>\n            <td></td>\n            <td>Сума - {sum}</td>\n          </tr>\n        </tbody>\n      </table>\n      <button\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={() => showNewItemField()}\n      >\n        {isNewItemField ? \"Відмінити новий пункт\" : \"Створити пункт\"}\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { reducer } from './redux/reducer';\nimport { BasketHandler } from './components/BasketHandler';\n\nconst store = createStore(reducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BasketHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}